{"version":3,"sources":["componets/Carousels.jsx","api/index.js","actions/actionType.js","actions/productAction.js","componets/ProductsList.jsx","componets/Report.jsx","componets/Cart.jsx","componets/Header.jsx","componets/Footer.jsx","App.js","serviceWorker.js","reducers/ProductReducer.js","index.js"],"names":["Carousels","Carousel","Item","className","src","process","alt","Component","cb","timeout","setTimeout","_products","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","ADD_SHIPPING","ADD_DATA_STARTED","ADD_DATA_SUCCESS","loadDataSuccess","products","type","ProductsList","handleClick","id","props","addToCart","this","dispatch","shop","isLoggedIn","loading","productList","items","map","item","Card","Img","variant","title","img","Body","Title","substring","Text","desc","price","Button","to","onClick","connect","state","Report","template","handleChecked","e","preventDefault","target","checked","addShipping","substractShipping","setState","show","refs","onChange","total","addedItems","count","Cart","handleRemove","removeItem","handleAddQuantity","addQuantity","handleSubtractQuantity","subtractQuantity","length","width","height","qty","name","defaultValue","colSpan","align","scope","Header","console","log","basename","Navbar","collapseOnSelect","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","data-badge","data-count","exact","path","component","ProductList","Footer","App","Fragment","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","initState","ProductReducer","action","addedItem","find","existed_item","quantity","newTotal","itemToRemove","new_items","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"g1ZAiCeA,E,4JA7Bb,WACE,OACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,KAAV,UACE,qBACEC,UAAU,gBACVC,IAAKC,6CACLC,IAAI,kBAGR,cAACL,EAAA,EAASC,KAAV,UACE,qBACEC,UAAU,gBACVC,IAAKC,6CACLC,IAAI,kBAGR,cAACL,EAAA,EAASC,KAAV,UACE,qBACEC,UAAU,gBACVC,IAAKC,6CACLC,IAAI,yB,GAtBQC,a,yCCER,EACA,SAACC,EAAIC,GAAL,OAAiBC,YAAW,kBAAMF,EAAGG,KAAYF,GAHhD,MCHJG,EAAc,cACdC,EAAc,cACdC,EAAe,eACfC,EAAe,eACfC,EAAe,eACfC,EAAmB,mBACnBC,EAAmB,mBCWnBC,EAAkB,SAAAC,GAAQ,MAAK,CAC1CC,KAAMH,EACNE,aCbIE,E,4MAKJC,YAAc,SAAAC,GACZ,EAAKC,MAAMC,UAAUF,I,wDALvB,WACEG,KAAKF,MAAMG,UDGa,SAACA,GAC3BC,GAAiB,SAAAT,GACfQ,EAAST,EAAgBC,Y,oBCE3B,WAAU,IAAD,OACDU,EAAaH,KAAKF,MAAMM,QAC1BC,EAAcL,KAAKF,MAAMQ,MAAMC,KAAI,SAAAC,GACrC,OACE,qBAAKhC,UAAU,qBAAf,SACE,eAACiC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMhC,IAAK6B,EAAKI,MAAOnC,IAAK+B,EAAKK,MACnD,eAACJ,EAAA,EAAKK,KAAN,CAAWtC,UAAU,SAArB,UACE,eAACiC,EAAA,EAAKM,MAAN,WAAaP,EAAKI,MAAMI,UAAU,EAAG,IAArC,SACA,eAACP,EAAA,EAAKQ,KAAN,CAAWzC,UAAU,aAArB,UAAmCgC,EAAKU,KAAKF,UAAU,EAAG,IAA1D,SACA,eAACP,EAAA,EAAKM,MAAN,uBAAsBP,EAAKW,MAA3B,aACA,cAACC,EAAA,EAAD,CACET,QAAQ,oBACRU,GAAG,IACHC,QAAS,WACP,EAAK1B,YAAYY,EAAKX,KAJ1B,gCAPmCW,EAAKX,OAqBlD,OACE,8BACGM,EACC,8BACE,qBAAK3B,UAAU,kCAAf,SACE,cAAC,IAAD,CAAQkB,KAAK,OAAOlB,UAAU,kBAIlC,8BACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,mCAAd,wBACA,qBAAKA,UAAU,gBAAf,SAAgC6B,IAChC,kC,GA/CazB,aAwEZ2C,eAhBS,SAAAC,GACtB,MAAO,CACLlB,MAAOkB,EAAMlB,MACbF,QAASoB,EAAMpB,YAIQ,SAAAH,GACzB,MAAO,CACLA,WACAF,UAAW,SAAAF,GACTI,ED7CmB,SAAAJ,GACvB,MAAO,CACLH,KAAMT,EACNY,MC0CWE,CAAUF,QAKV0B,CAA6C5B,GC1EtD8B,E,kDACJ,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IAIR4B,SAAW,GALQ,EAOnBC,cAAgB,SAAAC,GACdA,EAAEC,iBACED,EAAEE,OAAOC,QACX,EAAKjC,MAAMkC,cAEX,EAAKlC,MAAMmC,qBAZI,EAgBnBrC,YAAc,SAAAgC,GACZA,EAAEC,iBACF,EAAKK,SAAS,CAAEC,MAAM,KAhBtB,EAAKX,MAAQ,CAAEW,MAAM,GAFJ,E,0CAqBnB,WACE,OACE,sBAAK3D,UAAU,kBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,uBAAOA,UAAU,sBAAjB,SACE,gCACE,+BACE,6BACE,uBACEkB,KAAK,WACL0C,KAAK,WACLC,SAAUrC,KAAK2B,kBAGnB,+DACA,uBACA,uBACA,6BACE,6CAEF,oBAAInD,UAAU,aAAd,SACE,mCAASwB,KAAKF,MAAMwC,MAApB,0BAOZ,sBAAK9D,UAAU,WAAf,UACGwB,KAAKwB,MAAMW,KAAOnC,KAAK0B,SAAW,KACnC,sBAAKlD,UAAU,MAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,IAAD,CAAMA,UAAU,sCAAsC6C,GAAG,IAAzD,iCAIF,qBAAK7C,UAAU,0CAAf,SACE,wBACEA,UAAU,4BADZ,qC,GA5DOI,aA4FN2C,eAnBS,SAAAC,GACtB,MAAO,CACLe,WAAYf,EAAMe,WAClBD,MAAOd,EAAMc,MACbE,MAAOhB,EAAMgB,UAIU,SAAAvC,GACzB,MAAO,CACL+B,YAAa,WACX/B,EAAS,CAAEP,KAAM,kBAEnBuC,kBAAmB,WACjBhC,EAAS,CAAEP,KAAM,qBAKR6B,CAA6CE,GCrFtDgB,E,4MAEJC,aAAe,SAAA7C,GACb,EAAKC,MAAM6C,WAAW9C,I,EAGxB+C,kBAAoB,SAAA/C,GAClB,EAAKC,MAAM+C,YAAYhD,I,EAGzBiD,uBAAyB,SAAAjD,GACvB,EAAKC,MAAMiD,iBAAiBlD,I,4CAE9B,WAAU,IAAD,OACH0C,EAAavC,KAAKF,MAAMQ,MAAM0C,OAChChD,KAAKF,MAAMQ,MAAMC,KAAI,SAAAC,GACnB,OACE,+BACE,6BACE,qBAAK/B,IAAK+B,EAAKK,IAAKoC,MAAM,KAAKC,OAAO,KAAKvE,IAAK6B,EAAKI,UAEvD,6BAAKJ,EAAKI,QACV,2CAAcJ,EAAK2C,OACnB,6BACE,sBAAK3E,UAAU,WAAf,UACE,mBACEA,UAAU,WACVkB,KAAK,SACL0D,KAAK,SACL9B,QAAS,WACP,EAAKsB,kBAAkBpC,EAAKX,KALhC,SAQE,qBACEpB,IAAI,qDACJE,IAAI,mBAGR,uBAAOe,KAAK,OAAO0D,KAAK,OAAOC,aAAa,MAC5C,mBACE7E,UAAU,YACVkB,KAAK,SACL0D,KAAK,SACL9B,QAAS,WACP,EAAKwB,uBAAuBtC,EAAKX,KALrC,SAQE,qBACEpB,IAAI,sDACJE,IAAI,wBAKZ,qBAAIH,UAAU,aAAd,oBAA8BgC,EAAKW,SACnC,oBAAI3C,UAAU,aAAd,SACE,wBACEA,UAAU,wBACV8C,QAAS,WACP,EAAKoB,aAAalC,EAAKX,KAH3B,SAME,mBAAGrB,UAAU,sBA7CVgC,EAAKX,OAoDlB,6BACE,oBAAIyD,QAAQ,IAAIC,MAAM,SAAtB,iCAKJ,OACE,sBAAK/E,UAAU,kBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,wBAAOA,UAAU,sBAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIgF,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAMhF,UAAU,cAA1B,sBAGA,oBAAIgF,MAAM,MAAMhF,UAAU,aAA1B,mBAGA,wCAGJ,gCAAQ+D,eAMlB,cAAC,EAAD,W,GAtGW3D,aA+HJ2C,eAnBS,SAAAC,GACtB,MAAO,CACLlB,MAAOkB,EAAMe,eAIU,SAAAtC,GACzB,MAAO,CACL0C,WAAY,SAAA9C,GACVI,EH7FoB,SAAAJ,GACxB,MAAO,CACLH,KAAMR,EACNW,MG0FW8C,CAAW9C,KAEtBgD,YAAa,SAAAhD,GACXI,EHlFqB,SAAAJ,GAEzB,MAAO,CACLH,KAAMN,EACNS,MG8EWgD,CAAYhD,KAEvBkD,iBAAkB,SAAAlD,GAChBI,EH5F0B,SAAAJ,GAC9B,MAAO,CACLH,KAAMP,EACNU,MGyFWkD,CAAiBlD,QAIjB0B,CAA6CkB,GCnItDgB,E,4JACJ,WAEE,OADAC,QAAQC,IAAI3D,KAAKF,MAAM0C,OAErB,cAAC,IAAD,CAAeoB,SAAUlF,0BAAzB,SACE,sBAAKF,UAAU,YAAf,UACE,eAACqF,EAAA,EAAD,CACEC,kBAAgB,EAChBC,OAAO,KACPvF,UAAU,qBACVmC,QAAQ,OAJV,UAME,cAACkD,EAAA,EAAOG,MAAR,CAAcC,KAAK,IAAnB,2BACA,cAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,0BAC7B,eAACN,EAAA,EAAOO,SAAR,CAAiBvE,GAAG,wBAApB,UACE,eAACwE,EAAA,EAAD,CAAK7F,UAAU,UAAf,UACE,cAAC,IAAD,CACE6C,GAAG,IACH7C,UAAU,4CAFZ,kBAMsB,IAArBwB,KAAKF,MAAM0C,OACT,cAAC,IAAD,CACAnB,GAAG,QACH7C,UAAU,4CAFV,qBAQL,oBAAIA,UAAU,8BAAd,SACE,6BACE,cAAC,IAAD,CACE6C,GAAG,QACH7C,UAAU,mEACV8F,aAAYtE,KAAKF,MAAM0C,MACvB+B,aAAW,iBAMrB,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQC,OAAK,EAACC,KAAK,IAAKC,UAAWC,IACnC,cAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWjC,gB,GA9CtB7D,aA4DN2C,eANS,SAAAC,GACtB,MAAO,CACLgB,MAAOhB,EAAMgB,SAIFjB,CAAyBkC,GCrDzBmB,E,4JAXb,WACE,OACE,wBAAQpG,UAAU,mBAAlB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAMA,UAAU,aAAhB,kC,GALWI,aCaNiG,E,4JAVb,WACE,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GALUlG,aCQZmG,G,MAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtE,QACfgE,UAAUC,cAAcQ,YAI1BvC,QAAQC,IACN,iHAKE4B,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBlC,QAAQC,IAAI,sCAGR4B,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAAAC,GACL3C,QAAQ2C,MAAM,4CAA6CA,M,mCCtF3DC,EAAY,CAChBhG,MAAO,GACPiC,WAAY,GACZD,MAAO,EACPE,MAAO,EACPpC,SAAS,GAmGImG,EAjGQ,WAAgC,IAA/B/E,EAA8B,uDAAtB8E,EAAWE,EAAW,uCAEpD,GAAIA,EAAO9G,OAASJ,EAClB,OAAO,eACFkC,GAIP,GAAIgF,EAAO9G,OAASH,EAClB,OAAO,2BACFiC,GADL,IAEElB,MAAOkG,EAAO/G,SACdW,SAAS,IAIb,GAAIoG,EAAO9G,OAAST,EAAa,CAC/B,IAAIwH,EAAYjF,EAAMlB,MAAMoG,MAAK,SAAAlG,GAAI,OAAIA,EAAKX,KAAO2G,EAAO3G,MACxD8G,EAAenF,EAAMe,WAAWmE,MAAK,SAAAlG,GAAI,OAAIgG,EAAO3G,KAAOW,EAAKX,MACpE,GAAI8G,EAEF,OADAF,EAAUG,UAAY,EACf,2BACFpF,GADL,IAEEc,MAAOd,EAAMc,MAAQmE,EAAUtF,MAC/BqB,MAAOhB,EAAMgB,MAAQ,IAGvBiE,EAAUG,SAAW,EACrB,IAAIC,EAAWrF,EAAMc,MAAQmE,EAAUtF,MAEvC,OAAO,2BACFK,GADL,IAEEe,WAAW,GAAD,mBAAMf,EAAMe,YAAZ,CAAwBkE,IAClCnE,MAAOuE,EACPrE,MAAOhB,EAAMgB,MAAQ,IAI3B,GAAIgE,EAAO9G,OAASR,EAAa,CAC/B,IAAI4H,EAAetF,EAAMe,WAAWmE,MAAK,SAAAlG,GAAI,OAAIgG,EAAO3G,KAAOW,EAAKX,MAChEkH,EAAYvF,EAAMe,WAAWyE,QAAO,SAAAxG,GAAI,OAAIgG,EAAO3G,KAAOW,EAAKX,MAE/DgH,EAAWrF,EAAMc,MAAQwE,EAAa3F,MAAQ2F,EAAaF,SAE/D,OADAlD,QAAQC,IAAImD,GACL,2BACFtF,GADL,IAEEe,WAAYwE,EACZzE,MAAOuE,EACPrE,MAAOhB,EAAMgB,MAAQ,IAGzB,GAAIgE,EAAO9G,OAASN,EAAc,CAChC,IAAIqH,EAAYjF,EAAMlB,MAAMoG,MAAK,SAAAlG,GAAI,OAAIA,EAAKX,KAAO2G,EAAO3G,MAC5D4G,EAAUG,UAAY,EACtB,IAAIC,EAAWrF,EAAMc,MAAQmE,EAAUtF,MACvC,OAAO,2BACFK,GADL,IAEEc,MAAOuE,IAGX,GAAIL,EAAO9G,OAASP,EAAc,CAChC,IAAIsH,EAAYjF,EAAMlB,MAAMoG,MAAK,SAAAlG,GAAI,OAAIA,EAAKX,KAAO2G,EAAO3G,MAC5D,GAA2B,IAAvB4G,EAAUG,SAAgB,CAC5B,IAAIG,EAAYvF,EAAMe,WAAWyE,QAAO,SAAAxG,GAAI,OAAIA,EAAKX,KAAO2G,EAAO3G,MAC/DgH,EAAWrF,EAAMc,MAAQmE,EAAUtF,MACvC,OAAO,2BACFK,GADL,IAEEe,WAAYwE,EACZzE,MAAOuE,EACPrE,MAAOhB,EAAMgB,MAAQ,IAGvBiE,EAAUG,UAAY,EACtB,IAAIC,EAAWrF,EAAMc,MAAQmE,EAAUtF,MACvC,OAAO,2BACFK,GADL,IAEEc,MAAOuE,IAKb,OAAIL,EAAO9G,OAASL,EACX,2BACFmC,GADL,IAEEc,MAAOd,EAAMc,MAAQ,IAIL,iBAAhBkE,EAAO9G,KACF,2BACF8B,GADL,IAEEc,MAAOd,EAAMc,MAAQ,IAIlBd,GC9FHyF,EAAQC,YAAYX,EAAgBY,YAAgBC,MAE1DC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,SFFnB,SAAkBjC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIiC,IAAI/I,0BAAwBuG,OAAOC,SAASjB,MACpDyD,SAAWzC,OAAOC,SAASwC,OAIvC,OAGFzC,OAAO0C,iBAAiB,QAAQ,WAC9B,IAAMrC,EAAK,UAAM5G,0BAAN,sBAEPqG,IAgEV,SAAiCO,EAAOC,GAEtCqC,MAAMtC,GACHK,MAAK,SAAAkC,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C1C,UAAUC,cAAc0C,MAAMxC,MAAK,SAAAC,GACjCA,EAAawC,aAAazC,MAAK,WAC7BV,OAAOC,SAASmD,eAKpBhD,EAAgBC,EAAOC,MAG1Ba,OAAM,WACL1C,QAAQC,IACN,oEArFA2E,CAAwBhD,EAAOC,GAI/BC,UAAUC,cAAc0C,MAAMxC,MAAK,WACjCjC,QAAQC,IACN,iHAMJ0B,EAAgBC,EAAOC,OEvB/BE,K","file":"static/js/main.261591cc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport \"../App.css\";\nclass Carousels extends Component {\n  render() {\n    return (\n      <Carousel>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={process.env.PUBLIC_URL + '/images/banner1.jpg'}\n            alt=\"First slide\"\n          />\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={process.env.PUBLIC_URL + '/images/banner2.jpg'}\n            alt=\"Third slide\"\n          />\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src={process.env.PUBLIC_URL + '/images/banner1.jpg'}\n            alt=\"Third slide\"\n          />\n        </Carousel.Item>\n      </Carousel>\n    );\n  }\n}\n\nexport default Carousels;\n","\r\n import _products from './products.json'\r\n\r\n const TIMEOUT = 100\r\n // eslint-disable-next-line\r\n export default {\r\n   getProducts: (cb, timeout) => setTimeout(() => cb(_products), timeout || TIMEOUT)\r\n }","export const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\nexport const SUB_QUANTITY = \"SUB_QUANTITY\";\nexport const ADD_QUANTITY = \"ADD_QUANTITY\";\nexport const ADD_SHIPPING = \"ADD_SHIPPING\";\nexport const ADD_DATA_STARTED = \"ADD_DATA_STARTED\";\nexport const ADD_DATA_SUCCESS = \"ADD_DATA_SUCCESS\";\n","import shop from '../api/';\nimport {\n  ADD_TO_CART,\n  REMOVE_ITEM,\n  SUB_QUANTITY,\n  ADD_QUANTITY,\n  ADD_DATA_STARTED,\n  ADD_DATA_SUCCESS\n} from \"./actionType\";\n\n\nexport const loadData =()=> (dispatch) => {\n  shop.getProducts(products => {\n    dispatch(loadDataSuccess(products))\n  })\n}\n\nexport const loadDataSuccess = products => ({\n  type: ADD_DATA_SUCCESS,\n  products\n});\n\nexport const loadDataStarted = () => {\n  return {\n    type: ADD_DATA_STARTED\n  };\n};\n\nexport const addToCart = id => {\n  return {\n    type: ADD_TO_CART,\n    id\n  };\n};\n\nexport const removeItem = id => {\n  return {\n    type: REMOVE_ITEM,\n    id\n  };\n};\n\nexport const subtractQuantity = id => {\n  return {\n    type: SUB_QUANTITY,\n    id\n  };\n};\n\nexport const addQuantity = id => {\n  debugger;\n  return {\n    type: ADD_QUANTITY,\n    id\n  };\n};\n","import React, { Component } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport Loader from \"react-loader-spinner\";\nimport { connect } from \"react-redux\";\nimport { addToCart, loadData } from \"../actions/productAction\";\n\nclass ProductsList extends Component {\n  componentWillMount() {\n    this.props.dispatch(loadData());\n  }\n\n  handleClick = id => {\n    this.props.addToCart(id);\n  };\n\n  render() {\n    const isLoggedIn = this.props.loading;\n    let productList = this.props.items.map(item => {\n      return (\n        <div className=\"col-lg-3 mt-2 mb-2\" key={item.id}>\n          <Card>\n            <Card.Img variant=\"top\" alt={item.title} src={item.img} />\n            <Card.Body className=\"center\">\n              <Card.Title>{item.title.substring(0, 15)}...</Card.Title>\n              <Card.Text className=\"text-limit\">{item.desc.substring(0, 50)}...</Card.Text>\n              <Card.Title> Price : {item.price} ₹</Card.Title>\n              <Button\n                variant=\"primary btn-block\"\n                to=\"/\"\n                onClick={() => {\n                  this.handleClick(item.id);\n                }}\n              >\n                ADD TO CART\n              </Button>\n            </Card.Body>\n          </Card>\n        </div>\n      );\n    });\n    return (\n      <div>\n        {isLoggedIn ? (\n          <div>\n            <div className=\"container text-center mt-5 mb-5\">\n              <Loader type=\"Oval\" className=\"oval-type\" />\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div className=\"container bg\">\n              <h2 className=\"mt-3 mb-3 text-muted text-center\">Shop Items</h2>\n              <div className=\"row mt-2 mb-2\">{productList}</div>\n              <hr />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.items,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch,\n    addToCart: id => {\n      dispatch(addToCart(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"../index.css\";\nclass Report extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { show: false };\n  }\n  \n  template = {};\n\n  handleChecked = e => {\n    e.preventDefault();\n    if (e.target.checked) {\n      this.props.addShipping();\n    } else {\n      this.props.substractShipping();\n    }\n  };\n\n  handleClick = e => {\n    e.preventDefault();\n    this.setState({ show: true });\n  };\n\n  render() {\n    return (\n      <div className=\"container pad_0\">\n        <div className=\"col-lg-12 pad_0\">\n          <div className=\"table-responsive\">\n            <table className=\"table table-striped\">\n              <tbody>\n                <tr>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      refs=\"shipping\"\n                      onChange={this.handleChecked}\n                    />\n                  </td>\n                  <td>Shipping Charge : (+6 ₹)</td>\n                  <td />\n                  <td />\n                  <td>\n                    <strong>Total</strong>\n                  </td>\n                  <td className=\"text-right\">\n                    <strong>{this.props.total} ₹</strong>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className=\"col mb-2\">\n          {this.state.show ? this.template : null}\n          <div className=\"row\">\n            <div className=\"col-sm-12  col-md-6\">\n              <Link className=\"btn btn-block btn-primary mt-2 mb-2\" to=\"/\">\n                Continue Shopping\n              </Link>\n            </div>\n            <div className=\"col-sm-12 col-md-6 text-right mt-2 mb-2\">\n              <button\n                className=\"btn btn-block btn-success\"\n              >\n                Checkout\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    addedItems: state.addedItems,\n    total: state.total,\n    count: state.count\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addShipping: () => {\n      dispatch({ type: \"ADD_SHIPPING\" });\n    },\n    substractShipping: () => {\n      dispatch({ type: \"SUB_SHIPPING\" });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../index.css\";\nimport {\n  removeItem,\n  addQuantity,\n  subtractQuantity\n} from \"../actions/productAction\";\n\nimport Report from \"./Report\";\n\nclass Cart extends Component {\n  //to remove the item completely\n  handleRemove = id => {\n    this.props.removeItem(id);\n  };\n  //to add the quantity\n  handleAddQuantity = id => {\n    this.props.addQuantity(id);\n  };\n  //to substruct from the quantity\n  handleSubtractQuantity = id => {\n    this.props.subtractQuantity(id);\n  };\n  render() {\n    let addedItems = this.props.items.length ? (\n      this.props.items.map(item => {\n        return (\n          <tr key={item.id}>\n            <td>\n              <img src={item.img} width=\"50\" height=\"50\" alt={item.title} />\n            </td>\n            <td>{item.title}</td>\n            <td>In stock {item.qty}</td>\n            <td>\n              <div className=\"quantity\">\n                <i\n                  className=\"plus-btn\"\n                  type=\"button\"\n                  name=\"button\"\n                  onClick={() => {\n                    this.handleAddQuantity(item.id);\n                  }}\n                >\n                  <img\n                    src=\"https://designmodo.com/demo/shopping-cart/plus.svg\"\n                    alt=\"{item.title}\"\n                  />\n                </i>\n                <input type=\"text\" name=\"name\" defaultValue=\"1\" />\n                <i\n                  className=\"minus-btn\"\n                  type=\"button\"\n                  name=\"button\"\n                  onClick={() => {\n                    this.handleSubtractQuantity(item.id);\n                  }}\n                >\n                  <img\n                    src=\"https://designmodo.com/demo/shopping-cart/minus.svg\"\n                    alt=\"{item.title}\"\n                  />\n                </i>\n              </div>\n            </td>\n            <td className=\"text-right\">₹ {item.price}</td>\n            <td className=\"text-right\">\n              <button\n                className=\"btn btn-sm btn-danger\"\n                onClick={() => {\n                  this.handleRemove(item.id);\n                }}\n              >\n                <i className=\"fa fa-trash\" />\n              </button>\n            </td>\n          </tr>\n        );\n      })\n    ) : (\n      <tr>\n        <td colSpan=\"6\" align=\"center\">\n          No Data Available\n        </td>\n      </tr>\n    );\n    return (\n      <div className=\"container pad_0\">\n        <div className=\"cart\">\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th scope=\"col\"> </th>\n                      <th scope=\"col\">Product</th>\n                      <th scope=\"col\">Available</th>\n                      <th scope=\"col\" className=\"text-center\">\n                        Quantity\n                      </th>\n                      <th scope=\"col\" className=\"text-right\">\n                        Price\n                      </th>\n                      <th> </th>\n                    </tr>\n                  </thead>\n                  <tbody>{addedItems}</tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Report />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.addedItems\n    //addedItems: state.addedItems\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeItem: id => {\n      dispatch(removeItem(id));\n    },\n    addQuantity: id => {\n      dispatch(addQuantity(id));\n    },\n    subtractQuantity: id => {\n      dispatch(subtractQuantity(id));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Carousels from \"./Carousels\";\nimport ProductList from \"./ProductsList\";\nimport Cart from \"./Cart\";\nclass Header extends Component {\n  render() {\n    console.log(this.props.count);\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"container\">\n          <Navbar\n            collapseOnSelect\n            expand=\"lg\"\n            className=\"dark_primary_color\"\n            variant=\"dark\"\n          >\n            <Navbar.Brand href=\"/\">Products Shop</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Link\n                  to=\"/\"\n                  className=\"nav-link text_primary_color navbar_custom\"\n                >\n                  Home\n                </Link>\n                {this.props.count !== 0  &&\n                   <Link\n                   to=\"/cart\"\n                   className=\"nav-link text_primary_color navbar_custom\"\n                 >\n                   Cart\n                 </Link>\n                }\n              </Nav>\n              <ul className=\"nav navbar-nav navbar-right\">\n                <li>\n                  <Link\n                    to=\"/cart\"\n                    className=\"text-white badge1 p3 fa fa-shopping-cart fa-stack-1x xfa-inverse\"\n                    data-badge={this.props.count}\n                    data-count=\"4b\"\n                  />\n                </li>\n              </ul>\n            </Navbar.Collapse>\n          </Navbar>\n          <Carousels />\n          <Switch>\n            <Route  exact path=\"/\"  component={ProductList} />\n            <Route path=\"/cart\" component={Cart} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    count: state.count\n  };\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer container\">\n        <div className=\"container\">\n          <span className=\"text-white\">saiyadhusain</span>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./componets/Header\";\nimport Footer from \"./componets/Footer\";\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ADD_TO_CART,\n  REMOVE_ITEM,\n  SUB_QUANTITY,\n  ADD_QUANTITY,\n  ADD_SHIPPING,\n  ADD_DATA_STARTED,\n  ADD_DATA_SUCCESS\n} from \"../actions/actionType\";\n\nconst initState = {\n  items: [],\n  addedItems: [],\n  total: 0,\n  count: 0,\n  loading: true\n};\nconst ProductReducer = (state = initState, action) => {\n  /*load data initially*/\n  if (action.type === ADD_DATA_STARTED) {\n    return {\n      ...state\n    };\n  }\n\n  if (action.type === ADD_DATA_SUCCESS) {\n    return {\n      ...state,\n      items: action.products,\n      loading: false\n    };\n  }\n\n  if (action.type === ADD_TO_CART) {\n    let addedItem = state.items.find(item => item.id === action.id);\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return {\n        ...state,\n        total: state.total + addedItem.price,\n        count: state.count + 1\n      };\n    } else {\n      addedItem.quantity = 1;\n      let newTotal = state.total + addedItem.price;\n\n      return {\n        ...state,\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal,\n        count: state.count + 1\n      };\n    }\n  }\n  if (action.type === REMOVE_ITEM) {\n    let itemToRemove = state.addedItems.find(item => action.id === item.id);\n    let new_items = state.addedItems.filter(item => action.id !== item.id);\n\n    let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n    console.log(itemToRemove);\n    return {\n      ...state,\n      addedItems: new_items,\n      total: newTotal,\n      count: state.count - 1\n    };\n  }\n  if (action.type === ADD_QUANTITY) {\n    let addedItem = state.items.find(item => item.id === action.id);\n    addedItem.quantity += 1;\n    let newTotal = state.total + addedItem.price;\n    return {\n      ...state,\n      total: newTotal\n    };\n  }\n  if (action.type === SUB_QUANTITY) {\n    let addedItem = state.items.find(item => item.id === action.id);\n    if (addedItem.quantity === 1) {\n      let new_items = state.addedItems.filter(item => item.id !== action.id);\n      let newTotal = state.total - addedItem.price;\n      return {\n        ...state,\n        addedItems: new_items,\n        total: newTotal,\n        count: state.count - 1\n      };\n    } else {\n      addedItem.quantity -= 1;\n      let newTotal = state.total - addedItem.price;\n      return {\n        ...state,\n        total: newTotal\n      };\n    }\n  }\n\n  if (action.type === ADD_SHIPPING) {\n    return {\n      ...state,\n      total: state.total + 6\n    };\n  }\n\n  if (action.type === \"SUB_SHIPPING\") {\n    return {\n      ...state,\n      total: state.total - 6\n    };\n  }\n\n  return state;\n};\nexport default ProductReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport * as serviceWorker from './serviceWorker';\n/*first will import createStore from redux*/\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n/* and also import Provider from react-redux*/\nimport { Provider } from \"react-redux\";\n\n/*importing ProductReducer */\nimport ProductReducer from \"./reducers/ProductReducer\";\n\n/*then i will create store and map with reducer*/\nconst store = createStore(ProductReducer, applyMiddleware(thunk)); // product reducer will import from reducer\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();"],"sourceRoot":""}